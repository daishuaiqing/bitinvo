 Binding route ::   /application/count 
 Binding route ::   /applicationprocess/count 
 Binding route ::   /applicationtype/count 
 Binding route ::   /asset/count 
 Binding route ::   /bullettype/count 
 Binding route ::   /cabinet/count 
 Binding route ::   /cabinetmodule/count 
 Binding route ::   /cert/count 
 Binding route ::   /contact/count 
 Binding route ::   /dutyshift/count 
 Binding route ::   /fingerprint/count 
 Binding route ::   /gun/count 
 Binding route ::   /guntype/count 
 Binding route ::   /message/count 
 Binding route ::   /optlog/count 
 Binding route ::   /org/count 
 Binding route ::   /position/count 
 Binding route ::   /role/count 
 Binding route ::   /system/count 
 Binding route ::   /user/count 
 Binding route ::   /userlog/count 
 Binding route ::   /csrfToken (FUNCTION: csrfToken)
 Binding route ::  get /m/:moduleName (POLICY: localaccess)
 Binding route ::  get /m/:moduleName (ACTION: module/index)
 Binding route ::  get / (POLICY: alwaysAllow)
 Binding route ::  get / (ACTION: default/index)
 Binding route ::  post /org (POLICY: localaccess)
 Binding route ::  post /org (POLICY: tokenAuth)
 Binding route ::  post /org (POLICY: basicAuth)
 Binding route ::  post /org (POLICY: passport)
 Binding route ::  post /org (POLICY: sessionAuth)
 Binding route ::  post /org (ACTION: org/beforesubmitcheckorgname)
 Binding route ::  post /position (POLICY: localaccess)
 Binding route ::  post /position (POLICY: tokenAuth)
 Binding route ::  post /position (POLICY: basicAuth)
 Binding route ::  post /position (POLICY: passport)
 Binding route ::  post /position (POLICY: sessionAuth)
 Binding route ::  post /position (ACTION: position/beforesubmitcheckpositionname)
 Binding route ::  post /role (POLICY: localaccess)
 Binding route ::  post /role (POLICY: tokenAuth)
 Binding route ::  post /role (POLICY: basicAuth)
 Binding route ::  post /role (POLICY: passport)
 Binding route ::  post /role (POLICY: sessionAuth)
 Binding route ::  post /role (ACTION: role/beforesubmitcheckrolename)
 Binding route ::  post /applicationType (POLICY: localaccess)
 Binding route ::  post /applicationType (POLICY: tokenAuth)
 Binding route ::  post /applicationType (POLICY: basicAuth)
 Binding route ::  post /applicationType (POLICY: passport)
 Binding route ::  post /applicationType (POLICY: sessionAuth)
 Binding route ::  post /applicationType (ACTION: applicationtype/beforesubmitcheckapplicationtypename)
 Binding route ::  get /__getcookie (SOCKETS HOOK)
 Binding action (updateprocess) blueprint/shadow route for controller: application
 Binding route ::   /application/updateprocess/:id? (POLICY: localaccess)
 Binding route ::   /application/updateprocess/:id? (POLICY: tokenAuth)
 Binding route ::   /application/updateprocess/:id? (POLICY: basicAuth)
 Binding route ::   /application/updateprocess/:id? (POLICY: passport)
 Binding route ::   /application/updateprocess/:id? (POLICY: sessionAuth)
 Binding route ::   /application/updateprocess/:id? (ACTION: application/updateprocess)
 Binding action (create) blueprint/shadow route for controller: application
 Binding route ::   /application/create/:id? (POLICY: localaccess)
 Binding route ::   /application/create/:id? (POLICY: tokenAuth)
 Binding route ::   /application/create/:id? (POLICY: basicAuth)
 Binding route ::   /application/create/:id? (POLICY: passport)
 Binding route ::   /application/create/:id? (POLICY: sessionAuth)
 Binding route ::   /application/create/:id? (ACTION: application/create)
 Binding action (validate) blueprint/shadow route for controller: application
 Binding route ::   /application/validate/:id? (POLICY: localaccess)
 Binding route ::   /application/validate/:id? (POLICY: tokenAuth)
 Binding route ::   /application/validate/:id? (POLICY: basicAuth)
 Binding route ::   /application/validate/:id? (POLICY: passport)
 Binding route ::   /application/validate/:id? (POLICY: sessionAuth)
 Binding route ::   /application/validate/:id? (ACTION: application/validate)
 Binding action (check) blueprint/shadow route for controller: application
 Binding route ::   /application/check/:id? (POLICY: blockAuth)
 Binding route ::   /application/check/:id? (ACTION: application/check)
 Binding action (emergencycheck) blueprint/shadow route for controller: application
 Binding route ::   /application/emergencycheck/:id? (POLICY: localaccess)
 Binding route ::   /application/emergencycheck/:id? (POLICY: tokenAuth)
 Binding route ::   /application/emergencycheck/:id? (POLICY: basicAuth)
 Binding route ::   /application/emergencycheck/:id? (POLICY: passport)
 Binding route ::   /application/emergencycheck/:id? (POLICY: sessionAuth)
 Binding route ::   /application/emergencycheck/:id? (ACTION: application/emergencycheck)
 Binding action (returnguncheck) blueprint/shadow route for controller: application
 Binding route ::   /application/returnguncheck/:id? (POLICY: localaccess)
 Binding route ::   /application/returnguncheck/:id? (POLICY: tokenAuth)
 Binding route ::   /application/returnguncheck/:id? (POLICY: basicAuth)
 Binding route ::   /application/returnguncheck/:id? (POLICY: passport)
 Binding route ::   /application/returnguncheck/:id? (POLICY: sessionAuth)
 Binding route ::   /application/returnguncheck/:id? (ACTION: application/returnguncheck)
 Binding action (returnbulletcheck) blueprint/shadow route for controller: application
 Binding route ::   /application/returnbulletcheck/:id? (POLICY: localaccess)
 Binding route ::   /application/returnbulletcheck/:id? (POLICY: tokenAuth)
 Binding route ::   /application/returnbulletcheck/:id? (POLICY: basicAuth)
 Binding route ::   /application/returnbulletcheck/:id? (POLICY: passport)
 Binding route ::   /application/returnbulletcheck/:id? (POLICY: sessionAuth)
 Binding route ::   /application/returnbulletcheck/:id? (ACTION: application/returnbulletcheck)
 Binding action (checkbullet) blueprint/shadow route for controller: application
 Binding route ::   /application/checkbullet/:id? (POLICY: blockAuth)
 Binding route ::   /application/checkbullet/:id? (ACTION: application/checkbullet)
 Binding action (adminauth) blueprint/shadow route for controller: application
 Binding route ::   /application/adminauth/:id? (POLICY: blockAuth)
 Binding route ::   /application/adminauth/:id? (ACTION: application/adminauth)
 Binding action (adminauthbyfingerprint) blueprint/shadow route for controller: application
 Binding route ::   /application/adminauthbyfingerprint/:id? (POLICY: localaccess)
 Binding route ::   /application/adminauthbyfingerprint/:id? (POLICY: tokenAuth)
 Binding route ::   /application/adminauthbyfingerprint/:id? (POLICY: basicAuth)
 Binding route ::   /application/adminauthbyfingerprint/:id? (POLICY: passport)
 Binding route ::   /application/adminauthbyfingerprint/:id? (POLICY: sessionAuth)
 Binding route ::   /application/adminauthbyfingerprint/:id? (ACTION: application/adminauthbyfingerprint)
 Binding action (identity) blueprint/shadow route for controller: application
 Binding action (globalid) blueprint/shadow route for controller: application
 Binding action (sails) blueprint/shadow route for controller: application
 Binding RESTful blueprint/shadow routes for model+controller: application
 Binding route ::  get /application (POLICY: localaccess)
 Binding route ::  get /application (POLICY: tokenAuth)
 Binding route ::  get /application (POLICY: basicAuth)
 Binding route ::  get /application (POLICY: passport)
 Binding route ::  get /application (POLICY: sessionAuth)
 Binding route ::  get /application (BLUEPRINT: findRecords)
 Binding route ::  get /application/:id (POLICY: localaccess)
 Binding route ::  get /application/:id (POLICY: tokenAuth)
 Binding route ::  get /application/:id (POLICY: basicAuth)
 Binding route ::  get /application/:id (POLICY: passport)
 Binding route ::  get /application/:id (POLICY: sessionAuth)
 Binding route ::  get /application/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /application (POLICY: localaccess)
 Binding route ::  post /application (POLICY: tokenAuth)
 Binding route ::  post /application (POLICY: basicAuth)
 Binding route ::  post /application (POLICY: passport)
 Binding route ::  post /application (POLICY: sessionAuth)
 Binding route ::  post /application (ACTION: application/create)
 Binding route ::  put /application/:id (POLICY: localaccess)
 Binding route ::  put /application/:id (POLICY: tokenAuth)
 Binding route ::  put /application/:id (POLICY: basicAuth)
 Binding route ::  put /application/:id (POLICY: passport)
 Binding route ::  put /application/:id (POLICY: sessionAuth)
 Binding route ::  put /application/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /application/:id (POLICY: localaccess)
 Binding route ::  post /application/:id (POLICY: tokenAuth)
 Binding route ::  post /application/:id (POLICY: basicAuth)
 Binding route ::  post /application/:id (POLICY: passport)
 Binding route ::  post /application/:id (POLICY: sessionAuth)
 Binding route ::  post /application/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /application/:id? (POLICY: localaccess)
 Binding route ::  delete /application/:id? (POLICY: tokenAuth)
 Binding route ::  delete /application/:id? (POLICY: basicAuth)
 Binding route ::  delete /application/:id? (POLICY: passport)
 Binding route ::  delete /application/:id? (POLICY: sessionAuth)
 Binding route ::  delete /application/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `applicationProcesses` for application
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (POLICY: localaccess)
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (POLICY: tokenAuth)
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (POLICY: basicAuth)
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (POLICY: passport)
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (POLICY: sessionAuth)
 Binding route ::  post /application/:parentid/applicationProcesses/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (POLICY: localaccess)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (POLICY: tokenAuth)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (POLICY: basicAuth)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (POLICY: passport)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (POLICY: sessionAuth)
 Binding route ::  delete /application/:parentid/applicationProcesses/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `applicationProcesses` for application
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/applicationProcesses/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `applicant` for application
 Binding route ::  get /application/:parentid/applicant/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/applicant/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/applicant/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/applicant/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/applicant/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/applicant/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `type` for application
 Binding route ::  get /application/:parentid/type/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/type/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/type/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/type/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/type/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/type/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `gun` for application
 Binding route ::  get /application/:parentid/gun/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/gun/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/gun/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/gun/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/gun/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/gun/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `bulletType` for application
 Binding route ::  get /application/:parentid/bulletType/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/bulletType/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/bulletType/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/bulletType/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/bulletType/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/bulletType/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `org` for application
 Binding route ::  get /application/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for application
 Binding route ::  get /application/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for application
 Binding route ::  get /application/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /application/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /application/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /application/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /application/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /application/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (update) blueprint/shadow route for controller: applicationprocess
 Binding route ::   /applicationprocess/update/:id? (POLICY: localaccess)
 Binding route ::   /applicationprocess/update/:id? (POLICY: tokenAuth)
 Binding route ::   /applicationprocess/update/:id? (POLICY: basicAuth)
 Binding route ::   /applicationprocess/update/:id? (POLICY: passport)
 Binding route ::   /applicationprocess/update/:id? (POLICY: sessionAuth)
 Binding route ::   /applicationprocess/update/:id? (ACTION: applicationprocess/update)
 Binding action (findwithtotal) blueprint/shadow route for controller: applicationprocess
 Binding route ::   /applicationprocess/findwithtotal/:id? (POLICY: localaccess)
 Binding route ::   /applicationprocess/findwithtotal/:id? (POLICY: tokenAuth)
 Binding route ::   /applicationprocess/findwithtotal/:id? (POLICY: basicAuth)
 Binding route ::   /applicationprocess/findwithtotal/:id? (POLICY: passport)
 Binding route ::   /applicationprocess/findwithtotal/:id? (POLICY: sessionAuth)
 Binding route ::   /applicationprocess/findwithtotal/:id? (ACTION: applicationprocess/findwithtotal)
 Binding action (identity) blueprint/shadow route for controller: applicationprocess
 Binding action (globalid) blueprint/shadow route for controller: applicationprocess
 Binding action (sails) blueprint/shadow route for controller: applicationprocess
 Binding RESTful blueprint/shadow routes for model+controller: applicationprocess
 Binding route ::  get /applicationprocess (POLICY: localaccess)
 Binding route ::  get /applicationprocess (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess (POLICY: basicAuth)
 Binding route ::  get /applicationprocess (POLICY: passport)
 Binding route ::  get /applicationprocess (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess (BLUEPRINT: findRecords)
 Binding route ::  get /applicationprocess/:id (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:id (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:id (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:id (POLICY: passport)
 Binding route ::  get /applicationprocess/:id (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /applicationprocess (POLICY: localaccess)
 Binding route ::  post /applicationprocess (POLICY: tokenAuth)
 Binding route ::  post /applicationprocess (POLICY: basicAuth)
 Binding route ::  post /applicationprocess (POLICY: passport)
 Binding route ::  post /applicationprocess (POLICY: sessionAuth)
 Binding route ::  post /applicationprocess (BLUEPRINT: createRecord)
 Binding route ::  put /applicationprocess/:id (POLICY: localaccess)
 Binding route ::  put /applicationprocess/:id (POLICY: tokenAuth)
 Binding route ::  put /applicationprocess/:id (POLICY: basicAuth)
 Binding route ::  put /applicationprocess/:id (POLICY: passport)
 Binding route ::  put /applicationprocess/:id (POLICY: sessionAuth)
 Binding route ::  put /applicationprocess/:id (ACTION: applicationprocess/update)
 Binding route ::  post /applicationprocess/:id (POLICY: localaccess)
 Binding route ::  post /applicationprocess/:id (POLICY: tokenAuth)
 Binding route ::  post /applicationprocess/:id (POLICY: basicAuth)
 Binding route ::  post /applicationprocess/:id (POLICY: passport)
 Binding route ::  post /applicationprocess/:id (POLICY: sessionAuth)
 Binding route ::  post /applicationprocess/:id (ACTION: applicationprocess/update)
 Binding route ::  delete /applicationprocess/:id? (POLICY: localaccess)
 Binding route ::  delete /applicationprocess/:id? (POLICY: tokenAuth)
 Binding route ::  delete /applicationprocess/:id? (POLICY: basicAuth)
 Binding route ::  delete /applicationprocess/:id? (POLICY: passport)
 Binding route ::  delete /applicationprocess/:id? (POLICY: sessionAuth)
 Binding route ::  delete /applicationprocess/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `applicant` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/applicant/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `approver` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/approver/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `application` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/application/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/application/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/application/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/application/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/application/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/application/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `message` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/message/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/message/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/message/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/message/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/message/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/message/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `org` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for applicationprocess
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationprocess/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (find) blueprint/shadow route for controller: applicationtype
 Binding route ::   /applicationtype/find/:id? (POLICY: localaccess)
 Binding route ::   /applicationtype/find/:id? (POLICY: tokenAuth)
 Binding route ::   /applicationtype/find/:id? (POLICY: basicAuth)
 Binding route ::   /applicationtype/find/:id? (POLICY: passport)
 Binding route ::   /applicationtype/find/:id? (POLICY: sessionAuth)
 Binding route ::   /applicationtype/find/:id? (ACTION: applicationtype/find)
 Binding action (approvers) blueprint/shadow route for controller: applicationtype
 Binding route ::   /applicationtype/approvers/:id? (POLICY: localaccess)
 Binding route ::   /applicationtype/approvers/:id? (POLICY: tokenAuth)
 Binding route ::   /applicationtype/approvers/:id? (POLICY: basicAuth)
 Binding route ::   /applicationtype/approvers/:id? (POLICY: passport)
 Binding route ::   /applicationtype/approvers/:id? (POLICY: sessionAuth)
 Binding route ::   /applicationtype/approvers/:id? (ACTION: applicationtype/approvers)
 Binding action (beforesubmitcheckapplicationtypename) blueprint/shadow route for controller: applicationtype
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (POLICY: localaccess)
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (POLICY: tokenAuth)
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (POLICY: basicAuth)
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (POLICY: passport)
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (POLICY: sessionAuth)
 Binding route ::   /applicationtype/beforesubmitcheckapplicationtypename/:id? (ACTION: applicationtype/beforesubmitcheckapplicationtypename)
 Binding action (identity) blueprint/shadow route for controller: applicationtype
 Binding action (globalid) blueprint/shadow route for controller: applicationtype
 Binding action (sails) blueprint/shadow route for controller: applicationtype
 Binding RESTful blueprint/shadow routes for model+controller: applicationtype
 Binding route ::  get /applicationtype (POLICY: localaccess)
 Binding route ::  get /applicationtype (POLICY: tokenAuth)
 Binding route ::  get /applicationtype (POLICY: basicAuth)
 Binding route ::  get /applicationtype (POLICY: passport)
 Binding route ::  get /applicationtype (POLICY: sessionAuth)
 Binding route ::  get /applicationtype (ACTION: applicationtype/find)
 Binding route ::  get /applicationtype/:id (POLICY: localaccess)
 Binding route ::  get /applicationtype/:id (POLICY: tokenAuth)
 Binding route ::  get /applicationtype/:id (POLICY: basicAuth)
 Binding route ::  get /applicationtype/:id (POLICY: passport)
 Binding route ::  get /applicationtype/:id (POLICY: sessionAuth)
 Binding route ::  get /applicationtype/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /applicationtype (POLICY: localaccess)
 Binding route ::  post /applicationtype (POLICY: tokenAuth)
 Binding route ::  post /applicationtype (POLICY: basicAuth)
 Binding route ::  post /applicationtype (POLICY: passport)
 Binding route ::  post /applicationtype (POLICY: sessionAuth)
 Binding route ::  post /applicationtype (BLUEPRINT: createRecord)
 Binding route ::  put /applicationtype/:id (POLICY: localaccess)
 Binding route ::  put /applicationtype/:id (POLICY: tokenAuth)
 Binding route ::  put /applicationtype/:id (POLICY: basicAuth)
 Binding route ::  put /applicationtype/:id (POLICY: passport)
 Binding route ::  put /applicationtype/:id (POLICY: sessionAuth)
 Binding route ::  put /applicationtype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /applicationtype/:id (POLICY: localaccess)
 Binding route ::  post /applicationtype/:id (POLICY: tokenAuth)
 Binding route ::  post /applicationtype/:id (POLICY: basicAuth)
 Binding route ::  post /applicationtype/:id (POLICY: passport)
 Binding route ::  post /applicationtype/:id (POLICY: sessionAuth)
 Binding route ::  post /applicationtype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /applicationtype/:id? (POLICY: localaccess)
 Binding route ::  delete /applicationtype/:id? (POLICY: tokenAuth)
 Binding route ::  delete /applicationtype/:id? (POLICY: basicAuth)
 Binding route ::  delete /applicationtype/:id? (POLICY: passport)
 Binding route ::  delete /applicationtype/:id? (POLICY: sessionAuth)
 Binding route ::  delete /applicationtype/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `approvers` for applicationtype
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (POLICY: localaccess)
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (POLICY: tokenAuth)
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (POLICY: basicAuth)
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (POLICY: passport)
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (POLICY: sessionAuth)
 Binding route ::  post /applicationtype/:parentid/approvers/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (POLICY: localaccess)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (POLICY: tokenAuth)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (POLICY: basicAuth)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (POLICY: passport)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (POLICY: sessionAuth)
 Binding route ::  delete /applicationtype/:parentid/approvers/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `approvers` for applicationtype
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (POLICY: localaccess)
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (POLICY: passport)
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationtype/:parentid/approvers/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for applicationtype
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationtype/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for applicationtype
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /applicationtype/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (play) blueprint/shadow route for controller: asset
 Binding route ::   /asset/play/:id? (POLICY: localaccess)
 Binding route ::   /asset/play/:id? (POLICY: tokenAuth)
 Binding route ::   /asset/play/:id? (POLICY: basicAuth)
 Binding route ::   /asset/play/:id? (POLICY: passport)
 Binding route ::   /asset/play/:id? (POLICY: sessionAuth)
 Binding route ::   /asset/play/:id? (ACTION: asset/play)
 Binding action (download) blueprint/shadow route for controller: asset
 Binding route ::   /asset/download/:id? (POLICY: localaccess)
 Binding route ::   /asset/download/:id? (POLICY: tokenAuth)
 Binding route ::   /asset/download/:id? (POLICY: basicAuth)
 Binding route ::   /asset/download/:id? (POLICY: passport)
 Binding route ::   /asset/download/:id? (POLICY: sessionAuth)
 Binding route ::   /asset/download/:id? (ACTION: asset/download)
 Binding action (identity) blueprint/shadow route for controller: asset
 Binding action (globalid) blueprint/shadow route for controller: asset
 Binding action (sails) blueprint/shadow route for controller: asset
 Binding RESTful blueprint/shadow routes for model+controller: asset
 Binding route ::  get /asset (POLICY: localaccess)
 Binding route ::  get /asset (POLICY: tokenAuth)
 Binding route ::  get /asset (POLICY: basicAuth)
 Binding route ::  get /asset (POLICY: passport)
 Binding route ::  get /asset (POLICY: sessionAuth)
 Binding route ::  get /asset (BLUEPRINT: findRecords)
 Binding route ::  get /asset/:id (POLICY: localaccess)
 Binding route ::  get /asset/:id (POLICY: tokenAuth)
 Binding route ::  get /asset/:id (POLICY: basicAuth)
 Binding route ::  get /asset/:id (POLICY: passport)
 Binding route ::  get /asset/:id (POLICY: sessionAuth)
 Binding route ::  get /asset/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /asset (POLICY: localaccess)
 Binding route ::  post /asset (POLICY: tokenAuth)
 Binding route ::  post /asset (POLICY: basicAuth)
 Binding route ::  post /asset (POLICY: passport)
 Binding route ::  post /asset (POLICY: sessionAuth)
 Binding route ::  post /asset (BLUEPRINT: createRecord)
 Binding route ::  put /asset/:id (POLICY: localaccess)
 Binding route ::  put /asset/:id (POLICY: tokenAuth)
 Binding route ::  put /asset/:id (POLICY: basicAuth)
 Binding route ::  put /asset/:id (POLICY: passport)
 Binding route ::  put /asset/:id (POLICY: sessionAuth)
 Binding route ::  put /asset/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /asset/:id (POLICY: localaccess)
 Binding route ::  post /asset/:id (POLICY: tokenAuth)
 Binding route ::  post /asset/:id (POLICY: basicAuth)
 Binding route ::  post /asset/:id (POLICY: passport)
 Binding route ::  post /asset/:id (POLICY: sessionAuth)
 Binding route ::  post /asset/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /asset/:id? (POLICY: localaccess)
 Binding route ::  delete /asset/:id? (POLICY: tokenAuth)
 Binding route ::  delete /asset/:id? (POLICY: basicAuth)
 Binding route ::  delete /asset/:id? (POLICY: passport)
 Binding route ::  delete /asset/:id? (POLICY: sessionAuth)
 Binding route ::  delete /asset/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `createdBy` for asset
 Binding route ::  get /asset/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /asset/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /asset/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /asset/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /asset/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /asset/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for asset
 Binding route ::  get /asset/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /asset/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /asset/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /asset/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /asset/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /asset/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (logout) blueprint/shadow route for controller: auth
 Binding route ::   /auth/logout/:id? (POLICY: basicAuth)
 Binding route ::   /auth/logout/:id? (POLICY: passport)
 Binding route ::   /auth/logout/:id? (ACTION: auth/logout)
 Binding action (signup) blueprint/shadow route for controller: auth
 Binding route ::   /auth/signup/:id? (POLICY: alwaysAllow)
 Binding route ::   /auth/signup/:id? (ACTION: auth/signup)
 Binding action (login) blueprint/shadow route for controller: auth
 Binding route ::   /auth/login/:id? (POLICY: basicAuth)
 Binding route ::   /auth/login/:id? (POLICY: passport)
 Binding route ::   /auth/login/:id? (ACTION: auth/login)
 Binding action (reset) blueprint/shadow route for controller: auth
 Binding route ::   /auth/reset/:id? (POLICY: basicAuth)
 Binding route ::   /auth/reset/:id? (POLICY: passport)
 Binding route ::   /auth/reset/:id? (ACTION: auth/reset)
 Binding action (disconnect) blueprint/shadow route for controller: auth
 Binding route ::   /auth/disconnect/:id? (POLICY: basicAuth)
 Binding route ::   /auth/disconnect/:id? (POLICY: passport)
 Binding route ::   /auth/disconnect/:id? (ACTION: auth/disconnect)
 Binding action (identity) blueprint/shadow route for controller: auth
 Binding action (globalid) blueprint/shadow route for controller: auth
 Binding action (sails) blueprint/shadow route for controller: auth
 Binding action (identity) blueprint/shadow route for controller: bullettype
 Binding action (globalid) blueprint/shadow route for controller: bullettype
 Binding action (sails) blueprint/shadow route for controller: bullettype
 Binding RESTful blueprint/shadow routes for model+controller: bullettype
 Binding route ::  get /bullettype (POLICY: localaccess)
 Binding route ::  get /bullettype (POLICY: tokenAuth)
 Binding route ::  get /bullettype (POLICY: basicAuth)
 Binding route ::  get /bullettype (POLICY: passport)
 Binding route ::  get /bullettype (POLICY: sessionAuth)
 Binding route ::  get /bullettype (BLUEPRINT: findRecords)
 Binding route ::  get /bullettype/:id (POLICY: localaccess)
 Binding route ::  get /bullettype/:id (POLICY: tokenAuth)
 Binding route ::  get /bullettype/:id (POLICY: basicAuth)
 Binding route ::  get /bullettype/:id (POLICY: passport)
 Binding route ::  get /bullettype/:id (POLICY: sessionAuth)
 Binding route ::  get /bullettype/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /bullettype (POLICY: localaccess)
 Binding route ::  post /bullettype (POLICY: tokenAuth)
 Binding route ::  post /bullettype (POLICY: basicAuth)
 Binding route ::  post /bullettype (POLICY: passport)
 Binding route ::  post /bullettype (POLICY: sessionAuth)
 Binding route ::  post /bullettype (BLUEPRINT: createRecord)
 Binding route ::  put /bullettype/:id (POLICY: localaccess)
 Binding route ::  put /bullettype/:id (POLICY: tokenAuth)
 Binding route ::  put /bullettype/:id (POLICY: basicAuth)
 Binding route ::  put /bullettype/:id (POLICY: passport)
 Binding route ::  put /bullettype/:id (POLICY: sessionAuth)
 Binding route ::  put /bullettype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /bullettype/:id (POLICY: localaccess)
 Binding route ::  post /bullettype/:id (POLICY: tokenAuth)
 Binding route ::  post /bullettype/:id (POLICY: basicAuth)
 Binding route ::  post /bullettype/:id (POLICY: passport)
 Binding route ::  post /bullettype/:id (POLICY: sessionAuth)
 Binding route ::  post /bullettype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /bullettype/:id? (POLICY: localaccess)
 Binding route ::  delete /bullettype/:id? (POLICY: tokenAuth)
 Binding route ::  delete /bullettype/:id? (POLICY: basicAuth)
 Binding route ::  delete /bullettype/:id? (POLICY: passport)
 Binding route ::  delete /bullettype/:id? (POLICY: sessionAuth)
 Binding route ::  delete /bullettype/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `gunTypes` for bullettype
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (POLICY: localaccess)
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (POLICY: tokenAuth)
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (POLICY: basicAuth)
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (POLICY: passport)
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (POLICY: sessionAuth)
 Binding route ::  post /bullettype/:parentid/gunTypes/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (POLICY: localaccess)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (POLICY: tokenAuth)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (POLICY: basicAuth)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (POLICY: passport)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (POLICY: sessionAuth)
 Binding route ::  delete /bullettype/:parentid/gunTypes/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `cabinetModule` for bullettype
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  post /bullettype/:parentid/cabinetModule/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  delete /bullettype/:parentid/cabinetModule/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `gunTypes` for bullettype
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (POLICY: localaccess)
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (POLICY: tokenAuth)
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (POLICY: basicAuth)
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (POLICY: passport)
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (POLICY: sessionAuth)
 Binding route ::  get /bullettype/:parentid/gunTypes/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `cabinetModule` for bullettype
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  get /bullettype/:parentid/cabinetModule/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for bullettype
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /bullettype/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for bullettype
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /bullettype/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (open) blueprint/shadow route for controller: cabinet
 Binding route ::   /cabinet/open/:id? (POLICY: localaccess)
 Binding route ::   /cabinet/open/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinet/open/:id? (POLICY: basicAuth)
 Binding route ::   /cabinet/open/:id? (POLICY: passport)
 Binding route ::   /cabinet/open/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinet/open/:id? (ACTION: cabinet/open)
 Binding action (close) blueprint/shadow route for controller: cabinet
 Binding route ::   /cabinet/close/:id? (POLICY: localaccess)
 Binding route ::   /cabinet/close/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinet/close/:id? (POLICY: basicAuth)
 Binding route ::   /cabinet/close/:id? (POLICY: passport)
 Binding route ::   /cabinet/close/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinet/close/:id? (ACTION: cabinet/close)
 Binding action (identity) blueprint/shadow route for controller: cabinet
 Binding action (globalid) blueprint/shadow route for controller: cabinet
 Binding action (sails) blueprint/shadow route for controller: cabinet
 Binding RESTful blueprint/shadow routes for model+controller: cabinet
 Binding route ::  get /cabinet (POLICY: localaccess)
 Binding route ::  get /cabinet (POLICY: tokenAuth)
 Binding route ::  get /cabinet (POLICY: basicAuth)
 Binding route ::  get /cabinet (POLICY: passport)
 Binding route ::  get /cabinet (POLICY: sessionAuth)
 Binding route ::  get /cabinet (BLUEPRINT: findRecords)
 Binding route ::  get /cabinet/:id (POLICY: localaccess)
 Binding route ::  get /cabinet/:id (POLICY: tokenAuth)
 Binding route ::  get /cabinet/:id (POLICY: basicAuth)
 Binding route ::  get /cabinet/:id (POLICY: passport)
 Binding route ::  get /cabinet/:id (POLICY: sessionAuth)
 Binding route ::  get /cabinet/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /cabinet (POLICY: localaccess)
 Binding route ::  post /cabinet (POLICY: tokenAuth)
 Binding route ::  post /cabinet (POLICY: basicAuth)
 Binding route ::  post /cabinet (POLICY: passport)
 Binding route ::  post /cabinet (POLICY: sessionAuth)
 Binding route ::  post /cabinet (BLUEPRINT: createRecord)
 Binding route ::  put /cabinet/:id (POLICY: localaccess)
 Binding route ::  put /cabinet/:id (POLICY: tokenAuth)
 Binding route ::  put /cabinet/:id (POLICY: basicAuth)
 Binding route ::  put /cabinet/:id (POLICY: passport)
 Binding route ::  put /cabinet/:id (POLICY: sessionAuth)
 Binding route ::  put /cabinet/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /cabinet/:id (POLICY: localaccess)
 Binding route ::  post /cabinet/:id (POLICY: tokenAuth)
 Binding route ::  post /cabinet/:id (POLICY: basicAuth)
 Binding route ::  post /cabinet/:id (POLICY: passport)
 Binding route ::  post /cabinet/:id (POLICY: sessionAuth)
 Binding route ::  post /cabinet/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /cabinet/:id? (POLICY: localaccess)
 Binding route ::  delete /cabinet/:id? (POLICY: tokenAuth)
 Binding route ::  delete /cabinet/:id? (POLICY: basicAuth)
 Binding route ::  delete /cabinet/:id? (POLICY: passport)
 Binding route ::  delete /cabinet/:id? (POLICY: sessionAuth)
 Binding route ::  delete /cabinet/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `org` for cabinet
 Binding route ::  get /cabinet/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /cabinet/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinet/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinet/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /cabinet/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinet/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for cabinet
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinet/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for cabinet
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinet/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (countbullet) blueprint/shadow route for controller: cabinetmodule
 Binding route ::   /cabinetmodule/countbullet/:id? (POLICY: localaccess)
 Binding route ::   /cabinetmodule/countbullet/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinetmodule/countbullet/:id? (POLICY: basicAuth)
 Binding route ::   /cabinetmodule/countbullet/:id? (POLICY: passport)
 Binding route ::   /cabinetmodule/countbullet/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinetmodule/countbullet/:id? (ACTION: cabinetmodule/countbullet)
 Binding action (countgun) blueprint/shadow route for controller: cabinetmodule
 Binding route ::   /cabinetmodule/countgun/:id? (POLICY: localaccess)
 Binding route ::   /cabinetmodule/countgun/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinetmodule/countgun/:id? (POLICY: basicAuth)
 Binding route ::   /cabinetmodule/countgun/:id? (POLICY: passport)
 Binding route ::   /cabinetmodule/countgun/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinetmodule/countgun/:id? (ACTION: cabinetmodule/countgun)
 Binding action (open) blueprint/shadow route for controller: cabinetmodule
 Binding route ::   /cabinetmodule/open/:id? (POLICY: localaccess)
 Binding route ::   /cabinetmodule/open/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinetmodule/open/:id? (POLICY: basicAuth)
 Binding route ::   /cabinetmodule/open/:id? (POLICY: passport)
 Binding route ::   /cabinetmodule/open/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinetmodule/open/:id? (ACTION: cabinetmodule/open)
 Binding action (openall) blueprint/shadow route for controller: cabinetmodule
 Binding route ::   /cabinetmodule/openall/:id? (POLICY: localaccess)
 Binding route ::   /cabinetmodule/openall/:id? (POLICY: tokenAuth)
 Binding route ::   /cabinetmodule/openall/:id? (POLICY: basicAuth)
 Binding route ::   /cabinetmodule/openall/:id? (POLICY: passport)
 Binding route ::   /cabinetmodule/openall/:id? (POLICY: sessionAuth)
 Binding route ::   /cabinetmodule/openall/:id? (ACTION: cabinetmodule/openall)
 Binding action (identity) blueprint/shadow route for controller: cabinetmodule
 Binding action (globalid) blueprint/shadow route for controller: cabinetmodule
 Binding action (sails) blueprint/shadow route for controller: cabinetmodule
 Binding RESTful blueprint/shadow routes for model+controller: cabinetmodule
 Binding route ::  get /cabinetmodule (POLICY: localaccess)
 Binding route ::  get /cabinetmodule (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule (POLICY: passport)
 Binding route ::  get /cabinetmodule (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule (BLUEPRINT: findRecords)
 Binding route ::  get /cabinetmodule/:id (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:id (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:id (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:id (POLICY: passport)
 Binding route ::  get /cabinetmodule/:id (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /cabinetmodule (POLICY: localaccess)
 Binding route ::  post /cabinetmodule (POLICY: tokenAuth)
 Binding route ::  post /cabinetmodule (POLICY: basicAuth)
 Binding route ::  post /cabinetmodule (POLICY: passport)
 Binding route ::  post /cabinetmodule (POLICY: sessionAuth)
 Binding route ::  post /cabinetmodule (BLUEPRINT: createRecord)
 Binding route ::  put /cabinetmodule/:id (POLICY: localaccess)
 Binding route ::  put /cabinetmodule/:id (POLICY: tokenAuth)
 Binding route ::  put /cabinetmodule/:id (POLICY: basicAuth)
 Binding route ::  put /cabinetmodule/:id (POLICY: passport)
 Binding route ::  put /cabinetmodule/:id (POLICY: sessionAuth)
 Binding route ::  put /cabinetmodule/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /cabinetmodule/:id (POLICY: localaccess)
 Binding route ::  post /cabinetmodule/:id (POLICY: tokenAuth)
 Binding route ::  post /cabinetmodule/:id (POLICY: basicAuth)
 Binding route ::  post /cabinetmodule/:id (POLICY: passport)
 Binding route ::  post /cabinetmodule/:id (POLICY: sessionAuth)
 Binding route ::  post /cabinetmodule/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /cabinetmodule/:id? (POLICY: localaccess)
 Binding route ::  delete /cabinetmodule/:id? (POLICY: tokenAuth)
 Binding route ::  delete /cabinetmodule/:id? (POLICY: basicAuth)
 Binding route ::  delete /cabinetmodule/:id? (POLICY: passport)
 Binding route ::  delete /cabinetmodule/:id? (POLICY: sessionAuth)
 Binding route ::  delete /cabinetmodule/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `cabinet` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/cabinet/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `gun` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/gun/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `gunType` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/gunType/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `bulletType` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/bulletType/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for cabinetmodule
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cabinetmodule/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (identity) blueprint/shadow route for controller: cabinetopttype
 Binding action (globalid) blueprint/shadow route for controller: cabinetopttype
 Binding action (sails) blueprint/shadow route for controller: cabinetopttype
 Binding action (identity) blueprint/shadow route for controller: cabinettype
 Binding action (globalid) blueprint/shadow route for controller: cabinettype
 Binding action (sails) blueprint/shadow route for controller: cabinettype
 Binding action (record) blueprint/shadow route for controller: camera
 Binding route ::   /camera/record/:id? (POLICY: alwaysAllow)
 Binding route ::   /camera/record/:id? (ACTION: camera/record)
 Binding action (stop) blueprint/shadow route for controller: camera
 Binding route ::   /camera/stop/:id? (POLICY: alwaysAllow)
 Binding route ::   /camera/stop/:id? (ACTION: camera/stop)
 Binding action (identity) blueprint/shadow route for controller: camera
 Binding action (globalid) blueprint/shadow route for controller: camera
 Binding action (sails) blueprint/shadow route for controller: camera
 Binding action (identity) blueprint/shadow route for controller: cert
 Binding action (globalid) blueprint/shadow route for controller: cert
 Binding action (sails) blueprint/shadow route for controller: cert
 Binding RESTful blueprint/shadow routes for model+controller: cert
 Binding route ::  get /cert (POLICY: localaccess)
 Binding route ::  get /cert (POLICY: tokenAuth)
 Binding route ::  get /cert (POLICY: basicAuth)
 Binding route ::  get /cert (POLICY: passport)
 Binding route ::  get /cert (POLICY: sessionAuth)
 Binding route ::  get /cert (BLUEPRINT: findRecords)
 Binding route ::  get /cert/:id (POLICY: localaccess)
 Binding route ::  get /cert/:id (POLICY: tokenAuth)
 Binding route ::  get /cert/:id (POLICY: basicAuth)
 Binding route ::  get /cert/:id (POLICY: passport)
 Binding route ::  get /cert/:id (POLICY: sessionAuth)
 Binding route ::  get /cert/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /cert (POLICY: localaccess)
 Binding route ::  post /cert (POLICY: tokenAuth)
 Binding route ::  post /cert (POLICY: basicAuth)
 Binding route ::  post /cert (POLICY: passport)
 Binding route ::  post /cert (POLICY: sessionAuth)
 Binding route ::  post /cert (BLUEPRINT: createRecord)
 Binding route ::  put /cert/:id (POLICY: localaccess)
 Binding route ::  put /cert/:id (POLICY: tokenAuth)
 Binding route ::  put /cert/:id (POLICY: basicAuth)
 Binding route ::  put /cert/:id (POLICY: passport)
 Binding route ::  put /cert/:id (POLICY: sessionAuth)
 Binding route ::  put /cert/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /cert/:id (POLICY: localaccess)
 Binding route ::  post /cert/:id (POLICY: tokenAuth)
 Binding route ::  post /cert/:id (POLICY: basicAuth)
 Binding route ::  post /cert/:id (POLICY: passport)
 Binding route ::  post /cert/:id (POLICY: sessionAuth)
 Binding route ::  post /cert/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /cert/:id? (POLICY: localaccess)
 Binding route ::  delete /cert/:id? (POLICY: tokenAuth)
 Binding route ::  delete /cert/:id? (POLICY: basicAuth)
 Binding route ::  delete /cert/:id? (POLICY: passport)
 Binding route ::  delete /cert/:id? (POLICY: sessionAuth)
 Binding route ::  delete /cert/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `gun` for cert
 Binding route ::  get /cert/:parentid/gun/:id? (POLICY: localaccess)
 Binding route ::  get /cert/:parentid/gun/:id? (POLICY: tokenAuth)
 Binding route ::  get /cert/:parentid/gun/:id? (POLICY: basicAuth)
 Binding route ::  get /cert/:parentid/gun/:id? (POLICY: passport)
 Binding route ::  get /cert/:parentid/gun/:id? (POLICY: sessionAuth)
 Binding route ::  get /cert/:parentid/gun/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for cert
 Binding route ::  get /cert/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /cert/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cert/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cert/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /cert/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cert/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for cert
 Binding route ::  get /cert/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /cert/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /cert/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /cert/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /cert/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /cert/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (identity) blueprint/shadow route for controller: contact
 Binding action (globalid) blueprint/shadow route for controller: contact
 Binding action (sails) blueprint/shadow route for controller: contact
 Binding RESTful blueprint/shadow routes for model+controller: contact
 Binding route ::  get /contact (POLICY: localaccess)
 Binding route ::  get /contact (POLICY: tokenAuth)
 Binding route ::  get /contact (POLICY: basicAuth)
 Binding route ::  get /contact (POLICY: passport)
 Binding route ::  get /contact (POLICY: sessionAuth)
 Binding route ::  get /contact (BLUEPRINT: findRecords)
 Binding route ::  get /contact/:id (POLICY: localaccess)
 Binding route ::  get /contact/:id (POLICY: tokenAuth)
 Binding route ::  get /contact/:id (POLICY: basicAuth)
 Binding route ::  get /contact/:id (POLICY: passport)
 Binding route ::  get /contact/:id (POLICY: sessionAuth)
 Binding route ::  get /contact/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /contact (POLICY: localaccess)
 Binding route ::  post /contact (POLICY: tokenAuth)
 Binding route ::  post /contact (POLICY: basicAuth)
 Binding route ::  post /contact (POLICY: passport)
 Binding route ::  post /contact (POLICY: sessionAuth)
 Binding route ::  post /contact (BLUEPRINT: createRecord)
 Binding route ::  put /contact/:id (POLICY: localaccess)
 Binding route ::  put /contact/:id (POLICY: tokenAuth)
 Binding route ::  put /contact/:id (POLICY: basicAuth)
 Binding route ::  put /contact/:id (POLICY: passport)
 Binding route ::  put /contact/:id (POLICY: sessionAuth)
 Binding route ::  put /contact/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /contact/:id (POLICY: localaccess)
 Binding route ::  post /contact/:id (POLICY: tokenAuth)
 Binding route ::  post /contact/:id (POLICY: basicAuth)
 Binding route ::  post /contact/:id (POLICY: passport)
 Binding route ::  post /contact/:id (POLICY: sessionAuth)
 Binding route ::  post /contact/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /contact/:id? (POLICY: localaccess)
 Binding route ::  delete /contact/:id? (POLICY: tokenAuth)
 Binding route ::  delete /contact/:id? (POLICY: basicAuth)
 Binding route ::  delete /contact/:id? (POLICY: passport)
 Binding route ::  delete /contact/:id? (POLICY: sessionAuth)
 Binding route ::  delete /contact/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `user` for contact
 Binding route ::  get /contact/:parentid/user/:id? (POLICY: localaccess)
 Binding route ::  get /contact/:parentid/user/:id? (POLICY: tokenAuth)
 Binding route ::  get /contact/:parentid/user/:id? (POLICY: basicAuth)
 Binding route ::  get /contact/:parentid/user/:id? (POLICY: passport)
 Binding route ::  get /contact/:parentid/user/:id? (POLICY: sessionAuth)
 Binding route ::  get /contact/:parentid/user/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for contact
 Binding route ::  get /contact/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /contact/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /contact/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /contact/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /contact/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /contact/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for contact
 Binding route ::  get /contact/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /contact/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /contact/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /contact/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /contact/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /contact/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (index) blueprint/shadow route for controller: default
 Binding route ::   /default/index/:id? (POLICY: alwaysAllow)
 Binding route ::   /default/index/:id? (ACTION: default/index)
 Binding index blueprint/shadow route for controller: default
 Binding route ::   /default (POLICY: alwaysAllow)
 Binding route ::   /default (ACTION: default/index)
 Binding action (identity) blueprint/shadow route for controller: default
 Binding action (globalid) blueprint/shadow route for controller: default
 Binding action (sails) blueprint/shadow route for controller: default
 Binding action (identity) blueprint/shadow route for controller: dutyshift
 Binding action (globalid) blueprint/shadow route for controller: dutyshift
 Binding action (sails) blueprint/shadow route for controller: dutyshift
 Binding RESTful blueprint/shadow routes for model+controller: dutyshift
 Binding route ::  get /dutyshift (POLICY: localaccess)
 Binding route ::  get /dutyshift (POLICY: tokenAuth)
 Binding route ::  get /dutyshift (POLICY: basicAuth)
 Binding route ::  get /dutyshift (POLICY: passport)
 Binding route ::  get /dutyshift (POLICY: sessionAuth)
 Binding route ::  get /dutyshift (BLUEPRINT: findRecords)
 Binding route ::  get /dutyshift/:id (POLICY: localaccess)
 Binding route ::  get /dutyshift/:id (POLICY: tokenAuth)
 Binding route ::  get /dutyshift/:id (POLICY: basicAuth)
 Binding route ::  get /dutyshift/:id (POLICY: passport)
 Binding route ::  get /dutyshift/:id (POLICY: sessionAuth)
 Binding route ::  get /dutyshift/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /dutyshift (POLICY: localaccess)
 Binding route ::  post /dutyshift (POLICY: tokenAuth)
 Binding route ::  post /dutyshift (POLICY: basicAuth)
 Binding route ::  post /dutyshift (POLICY: passport)
 Binding route ::  post /dutyshift (POLICY: sessionAuth)
 Binding route ::  post /dutyshift (BLUEPRINT: createRecord)
 Binding route ::  put /dutyshift/:id (POLICY: localaccess)
 Binding route ::  put /dutyshift/:id (POLICY: tokenAuth)
 Binding route ::  put /dutyshift/:id (POLICY: basicAuth)
 Binding route ::  put /dutyshift/:id (POLICY: passport)
 Binding route ::  put /dutyshift/:id (POLICY: sessionAuth)
 Binding route ::  put /dutyshift/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /dutyshift/:id (POLICY: localaccess)
 Binding route ::  post /dutyshift/:id (POLICY: tokenAuth)
 Binding route ::  post /dutyshift/:id (POLICY: basicAuth)
 Binding route ::  post /dutyshift/:id (POLICY: passport)
 Binding route ::  post /dutyshift/:id (POLICY: sessionAuth)
 Binding route ::  post /dutyshift/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /dutyshift/:id? (POLICY: localaccess)
 Binding route ::  delete /dutyshift/:id? (POLICY: tokenAuth)
 Binding route ::  delete /dutyshift/:id? (POLICY: basicAuth)
 Binding route ::  delete /dutyshift/:id? (POLICY: passport)
 Binding route ::  delete /dutyshift/:id? (POLICY: sessionAuth)
 Binding route ::  delete /dutyshift/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `user` for dutyshift
 Binding route ::  get /dutyshift/:parentid/user/:id? (POLICY: localaccess)
 Binding route ::  get /dutyshift/:parentid/user/:id? (POLICY: tokenAuth)
 Binding route ::  get /dutyshift/:parentid/user/:id? (POLICY: basicAuth)
 Binding route ::  get /dutyshift/:parentid/user/:id? (POLICY: passport)
 Binding route ::  get /dutyshift/:parentid/user/:id? (POLICY: sessionAuth)
 Binding route ::  get /dutyshift/:parentid/user/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `org` for dutyshift
 Binding route ::  get /dutyshift/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /dutyshift/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /dutyshift/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /dutyshift/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /dutyshift/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /dutyshift/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for dutyshift
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /dutyshift/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for dutyshift
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /dutyshift/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (identity) blueprint/shadow route for controller: fifo
 Binding action (globalid) blueprint/shadow route for controller: fifo
 Binding action (sails) blueprint/shadow route for controller: fifo
 Binding action (auth) blueprint/shadow route for controller: fingerprint
 Binding route ::   /fingerprint/auth/:id? (POLICY: alwaysAllow)
 Binding route ::   /fingerprint/auth/:id? (ACTION: fingerprint/auth)
 Binding action (record) blueprint/shadow route for controller: fingerprint
 Binding route ::   /fingerprint/record/:id? (POLICY: localaccess)
 Binding route ::   /fingerprint/record/:id? (POLICY: tokenAuth)
 Binding route ::   /fingerprint/record/:id? (POLICY: basicAuth)
 Binding route ::   /fingerprint/record/:id? (POLICY: passport)
 Binding route ::   /fingerprint/record/:id? (POLICY: sessionAuth)
 Binding route ::   /fingerprint/record/:id? (ACTION: fingerprint/record)
 Binding action (stopscan) blueprint/shadow route for controller: fingerprint
 Binding route ::   /fingerprint/stopscan/:id? (POLICY: alwaysAllow)
 Binding route ::   /fingerprint/stopscan/:id? (ACTION: fingerprint/stopscan)
 Binding action (identity) blueprint/shadow route for controller: fingerprint
 Binding action (globalid) blueprint/shadow route for controller: fingerprint
 Binding action (sails) blueprint/shadow route for controller: fingerprint
 Binding RESTful blueprint/shadow routes for model+controller: fingerprint
 Binding route ::  get /fingerprint (POLICY: localaccess)
 Binding route ::  get /fingerprint (POLICY: tokenAuth)
 Binding route ::  get /fingerprint (POLICY: basicAuth)
 Binding route ::  get /fingerprint (POLICY: passport)
 Binding route ::  get /fingerprint (POLICY: sessionAuth)
 Binding route ::  get /fingerprint (BLUEPRINT: findRecords)
 Binding route ::  get /fingerprint/:id (POLICY: localaccess)
 Binding route ::  get /fingerprint/:id (POLICY: tokenAuth)
 Binding route ::  get /fingerprint/:id (POLICY: basicAuth)
 Binding route ::  get /fingerprint/:id (POLICY: passport)
 Binding route ::  get /fingerprint/:id (POLICY: sessionAuth)
 Binding route ::  get /fingerprint/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /fingerprint (POLICY: localaccess)
 Binding route ::  post /fingerprint (POLICY: tokenAuth)
 Binding route ::  post /fingerprint (POLICY: basicAuth)
 Binding route ::  post /fingerprint (POLICY: passport)
 Binding route ::  post /fingerprint (POLICY: sessionAuth)
 Binding route ::  post /fingerprint (BLUEPRINT: createRecord)
 Binding route ::  put /fingerprint/:id (POLICY: localaccess)
 Binding route ::  put /fingerprint/:id (POLICY: tokenAuth)
 Binding route ::  put /fingerprint/:id (POLICY: basicAuth)
 Binding route ::  put /fingerprint/:id (POLICY: passport)
 Binding route ::  put /fingerprint/:id (POLICY: sessionAuth)
 Binding route ::  put /fingerprint/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /fingerprint/:id (POLICY: localaccess)
 Binding route ::  post /fingerprint/:id (POLICY: tokenAuth)
 Binding route ::  post /fingerprint/:id (POLICY: basicAuth)
 Binding route ::  post /fingerprint/:id (POLICY: passport)
 Binding route ::  post /fingerprint/:id (POLICY: sessionAuth)
 Binding route ::  post /fingerprint/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /fingerprint/:id? (POLICY: localaccess)
 Binding route ::  delete /fingerprint/:id? (POLICY: tokenAuth)
 Binding route ::  delete /fingerprint/:id? (POLICY: basicAuth)
 Binding route ::  delete /fingerprint/:id? (POLICY: passport)
 Binding route ::  delete /fingerprint/:id? (POLICY: sessionAuth)
 Binding route ::  delete /fingerprint/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `owner` for fingerprint
 Binding route ::  get /fingerprint/:parentid/owner/:id? (POLICY: localaccess)
 Binding route ::  get /fingerprint/:parentid/owner/:id? (POLICY: tokenAuth)
 Binding route ::  get /fingerprint/:parentid/owner/:id? (POLICY: basicAuth)
 Binding route ::  get /fingerprint/:parentid/owner/:id? (POLICY: passport)
 Binding route ::  get /fingerprint/:parentid/owner/:id? (POLICY: sessionAuth)
 Binding route ::  get /fingerprint/:parentid/owner/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for fingerprint
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /fingerprint/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for fingerprint
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /fingerprint/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (validation) blueprint/shadow route for controller: gun
 Binding route ::   /gun/validation/:id? (POLICY: localaccess)
 Binding route ::   /gun/validation/:id? (POLICY: tokenAuth)
 Binding route ::   /gun/validation/:id? (POLICY: basicAuth)
 Binding route ::   /gun/validation/:id? (POLICY: passport)
 Binding route ::   /gun/validation/:id? (POLICY: sessionAuth)
 Binding route ::   /gun/validation/:id? (ACTION: gun/validation)
 Binding action (identity) blueprint/shadow route for controller: gun
 Binding action (globalid) blueprint/shadow route for controller: gun
 Binding action (sails) blueprint/shadow route for controller: gun
 Binding RESTful blueprint/shadow routes for model+controller: gun
 Binding route ::  get /gun (POLICY: localaccess)
 Binding route ::  get /gun (POLICY: tokenAuth)
 Binding route ::  get /gun (POLICY: basicAuth)
 Binding route ::  get /gun (POLICY: passport)
 Binding route ::  get /gun (POLICY: sessionAuth)
 Binding route ::  get /gun (BLUEPRINT: findRecords)
 Binding route ::  get /gun/:id (POLICY: localaccess)
 Binding route ::  get /gun/:id (POLICY: tokenAuth)
 Binding route ::  get /gun/:id (POLICY: basicAuth)
 Binding route ::  get /gun/:id (POLICY: passport)
 Binding route ::  get /gun/:id (POLICY: sessionAuth)
 Binding route ::  get /gun/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /gun (POLICY: localaccess)
 Binding route ::  post /gun (POLICY: tokenAuth)
 Binding route ::  post /gun (POLICY: basicAuth)
 Binding route ::  post /gun (POLICY: passport)
 Binding route ::  post /gun (POLICY: sessionAuth)
 Binding route ::  post /gun (BLUEPRINT: createRecord)
 Binding route ::  put /gun/:id (POLICY: localaccess)
 Binding route ::  put /gun/:id (POLICY: tokenAuth)
 Binding route ::  put /gun/:id (POLICY: basicAuth)
 Binding route ::  put /gun/:id (POLICY: passport)
 Binding route ::  put /gun/:id (POLICY: sessionAuth)
 Binding route ::  put /gun/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /gun/:id (POLICY: localaccess)
 Binding route ::  post /gun/:id (POLICY: tokenAuth)
 Binding route ::  post /gun/:id (POLICY: basicAuth)
 Binding route ::  post /gun/:id (POLICY: passport)
 Binding route ::  post /gun/:id (POLICY: sessionAuth)
 Binding route ::  post /gun/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /gun/:id? (POLICY: localaccess)
 Binding route ::  delete /gun/:id? (POLICY: tokenAuth)
 Binding route ::  delete /gun/:id? (POLICY: basicAuth)
 Binding route ::  delete /gun/:id? (POLICY: passport)
 Binding route ::  delete /gun/:id? (POLICY: sessionAuth)
 Binding route ::  delete /gun/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `cabinetModule` for gun
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  post /gun/:parentid/cabinetModule/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  delete /gun/:parentid/cabinetModule/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `type` for gun
 Binding route ::  get /gun/:parentid/type/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/type/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/type/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/type/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/type/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/type/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `user` for gun
 Binding route ::  get /gun/:parentid/user/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/user/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/user/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/user/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/user/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/user/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `cert` for gun
 Binding route ::  get /gun/:parentid/cert/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/cert/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/cert/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/cert/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/cert/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/cert/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `cabinetModule` for gun
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/cabinetModule/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for gun
 Binding route ::  get /gun/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for gun
 Binding route ::  get /gun/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /gun/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /gun/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /gun/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /gun/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /gun/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (identity) blueprint/shadow route for controller: guntype
 Binding action (globalid) blueprint/shadow route for controller: guntype
 Binding action (sails) blueprint/shadow route for controller: guntype
 Binding RESTful blueprint/shadow routes for model+controller: guntype
 Binding route ::  get /guntype (POLICY: localaccess)
 Binding route ::  get /guntype (POLICY: tokenAuth)
 Binding route ::  get /guntype (POLICY: basicAuth)
 Binding route ::  get /guntype (POLICY: passport)
 Binding route ::  get /guntype (POLICY: sessionAuth)
 Binding route ::  get /guntype (BLUEPRINT: findRecords)
 Binding route ::  get /guntype/:id (POLICY: localaccess)
 Binding route ::  get /guntype/:id (POLICY: tokenAuth)
 Binding route ::  get /guntype/:id (POLICY: basicAuth)
 Binding route ::  get /guntype/:id (POLICY: passport)
 Binding route ::  get /guntype/:id (POLICY: sessionAuth)
 Binding route ::  get /guntype/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /guntype (POLICY: localaccess)
 Binding route ::  post /guntype (POLICY: tokenAuth)
 Binding route ::  post /guntype (POLICY: basicAuth)
 Binding route ::  post /guntype (POLICY: passport)
 Binding route ::  post /guntype (POLICY: sessionAuth)
 Binding route ::  post /guntype (BLUEPRINT: createRecord)
 Binding route ::  put /guntype/:id (POLICY: localaccess)
 Binding route ::  put /guntype/:id (POLICY: tokenAuth)
 Binding route ::  put /guntype/:id (POLICY: basicAuth)
 Binding route ::  put /guntype/:id (POLICY: passport)
 Binding route ::  put /guntype/:id (POLICY: sessionAuth)
 Binding route ::  put /guntype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /guntype/:id (POLICY: localaccess)
 Binding route ::  post /guntype/:id (POLICY: tokenAuth)
 Binding route ::  post /guntype/:id (POLICY: basicAuth)
 Binding route ::  post /guntype/:id (POLICY: passport)
 Binding route ::  post /guntype/:id (POLICY: sessionAuth)
 Binding route ::  post /guntype/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /guntype/:id? (POLICY: localaccess)
 Binding route ::  delete /guntype/:id? (POLICY: tokenAuth)
 Binding route ::  delete /guntype/:id? (POLICY: basicAuth)
 Binding route ::  delete /guntype/:id? (POLICY: passport)
 Binding route ::  delete /guntype/:id? (POLICY: sessionAuth)
 Binding route ::  delete /guntype/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `guns` for guntype
 Binding route ::  post /guntype/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  post /guntype/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  post /guntype/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  post /guntype/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  post /guntype/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  post /guntype/:parentid/guns/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /guntype/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  delete /guntype/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  delete /guntype/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  delete /guntype/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  delete /guntype/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  delete /guntype/:parentid/guns/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `guns` for guntype
 Binding route ::  get /guntype/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  get /guntype/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  get /guntype/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  get /guntype/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  get /guntype/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  get /guntype/:parentid/guns/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `bulletType` for guntype
 Binding route ::  get /guntype/:parentid/bulletType/:id? (POLICY: localaccess)
 Binding route ::  get /guntype/:parentid/bulletType/:id? (POLICY: tokenAuth)
 Binding route ::  get /guntype/:parentid/bulletType/:id? (POLICY: basicAuth)
 Binding route ::  get /guntype/:parentid/bulletType/:id? (POLICY: passport)
 Binding route ::  get /guntype/:parentid/bulletType/:id? (POLICY: sessionAuth)
 Binding route ::  get /guntype/:parentid/bulletType/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for guntype
 Binding route ::  get /guntype/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /guntype/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /guntype/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /guntype/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /guntype/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /guntype/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for guntype
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /guntype/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (subscribe) blueprint/shadow route for controller: message
 Binding route ::   /message/subscribe/:id? (POLICY: localaccess)
 Binding route ::   /message/subscribe/:id? (POLICY: tokenAuth)
 Binding route ::   /message/subscribe/:id? (POLICY: basicAuth)
 Binding route ::   /message/subscribe/:id? (POLICY: passport)
 Binding route ::   /message/subscribe/:id? (POLICY: sessionAuth)
 Binding route ::   /message/subscribe/:id? (ACTION: message/subscribe)
 Binding action (send) blueprint/shadow route for controller: message
 Binding route ::   /message/send/:id? (POLICY: localaccess)
 Binding route ::   /message/send/:id? (POLICY: tokenAuth)
 Binding route ::   /message/send/:id? (POLICY: basicAuth)
 Binding route ::   /message/send/:id? (POLICY: passport)
 Binding route ::   /message/send/:id? (POLICY: sessionAuth)
 Binding route ::   /message/send/:id? (ACTION: message/send)
 Binding action (noti) blueprint/shadow route for controller: message
 Binding route ::   /message/noti/:id? (POLICY: localaccess)
 Binding route ::   /message/noti/:id? (POLICY: tokenAuth)
 Binding route ::   /message/noti/:id? (POLICY: basicAuth)
 Binding route ::   /message/noti/:id? (POLICY: passport)
 Binding route ::   /message/noti/:id? (POLICY: sessionAuth)
 Binding route ::   /message/noti/:id? (ACTION: message/noti)
 Binding action (blast) blueprint/shadow route for controller: message
 Binding route ::   /message/blast/:id? (POLICY: localaccess)
 Binding route ::   /message/blast/:id? (POLICY: tokenAuth)
 Binding route ::   /message/blast/:id? (POLICY: basicAuth)
 Binding route ::   /message/blast/:id? (POLICY: passport)
 Binding route ::   /message/blast/:id? (POLICY: sessionAuth)
 Binding route ::   /message/blast/:id? (ACTION: message/blast)
 Binding action (blastevent) blueprint/shadow route for controller: message
 Binding route ::   /message/blastevent/:id? (POLICY: localaccess)
 Binding route ::   /message/blastevent/:id? (POLICY: tokenAuth)
 Binding route ::   /message/blastevent/:id? (POLICY: basicAuth)
 Binding route ::   /message/blastevent/:id? (POLICY: passport)
 Binding route ::   /message/blastevent/:id? (POLICY: sessionAuth)
 Binding route ::   /message/blastevent/:id? (ACTION: message/blastevent)
 Binding action (identity) blueprint/shadow route for controller: message
 Binding action (globalid) blueprint/shadow route for controller: message
 Binding action (sails) blueprint/shadow route for controller: message
 Binding RESTful blueprint/shadow routes for model+controller: message
 Binding route ::  get /message (POLICY: localaccess)
 Binding route ::  get /message (POLICY: tokenAuth)
 Binding route ::  get /message (POLICY: basicAuth)
 Binding route ::  get /message (POLICY: passport)
 Binding route ::  get /message (POLICY: sessionAuth)
 Binding route ::  get /message (BLUEPRINT: findRecords)
 Binding route ::  get /message/:id (POLICY: localaccess)
 Binding route ::  get /message/:id (POLICY: tokenAuth)
 Binding route ::  get /message/:id (POLICY: basicAuth)
 Binding route ::  get /message/:id (POLICY: passport)
 Binding route ::  get /message/:id (POLICY: sessionAuth)
 Binding route ::  get /message/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /message (POLICY: localaccess)
 Binding route ::  post /message (POLICY: tokenAuth)
 Binding route ::  post /message (POLICY: basicAuth)
 Binding route ::  post /message (POLICY: passport)
 Binding route ::  post /message (POLICY: sessionAuth)
 Binding route ::  post /message (BLUEPRINT: createRecord)
 Binding route ::  put /message/:id (POLICY: localaccess)
 Binding route ::  put /message/:id (POLICY: tokenAuth)
 Binding route ::  put /message/:id (POLICY: basicAuth)
 Binding route ::  put /message/:id (POLICY: passport)
 Binding route ::  put /message/:id (POLICY: sessionAuth)
 Binding route ::  put /message/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /message/:id (POLICY: localaccess)
 Binding route ::  post /message/:id (POLICY: tokenAuth)
 Binding route ::  post /message/:id (POLICY: basicAuth)
 Binding route ::  post /message/:id (POLICY: passport)
 Binding route ::  post /message/:id (POLICY: sessionAuth)
 Binding route ::  post /message/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /message/:id? (POLICY: localaccess)
 Binding route ::  delete /message/:id? (POLICY: tokenAuth)
 Binding route ::  delete /message/:id? (POLICY: basicAuth)
 Binding route ::  delete /message/:id? (POLICY: passport)
 Binding route ::  delete /message/:id? (POLICY: sessionAuth)
 Binding route ::  delete /message/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `from` for message
 Binding route ::  get /message/:parentid/from/:id? (POLICY: localaccess)
 Binding route ::  get /message/:parentid/from/:id? (POLICY: tokenAuth)
 Binding route ::  get /message/:parentid/from/:id? (POLICY: basicAuth)
 Binding route ::  get /message/:parentid/from/:id? (POLICY: passport)
 Binding route ::  get /message/:parentid/from/:id? (POLICY: sessionAuth)
 Binding route ::  get /message/:parentid/from/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `to` for message
 Binding route ::  get /message/:parentid/to/:id? (POLICY: localaccess)
 Binding route ::  get /message/:parentid/to/:id? (POLICY: tokenAuth)
 Binding route ::  get /message/:parentid/to/:id? (POLICY: basicAuth)
 Binding route ::  get /message/:parentid/to/:id? (POLICY: passport)
 Binding route ::  get /message/:parentid/to/:id? (POLICY: sessionAuth)
 Binding route ::  get /message/:parentid/to/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for message
 Binding route ::  get /message/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /message/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /message/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /message/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /message/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /message/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for message
 Binding route ::  get /message/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /message/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /message/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /message/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /message/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /message/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (index) blueprint/shadow route for controller: module
 Binding route ::   /module/index/:id? (POLICY: localaccess)
 Binding route ::   /module/index/:id? (ACTION: module/index)
 Binding index blueprint/shadow route for controller: module
 Binding route ::   /module (POLICY: localaccess)
 Binding route ::   /module (ACTION: module/index)
 Binding action (identity) blueprint/shadow route for controller: module
 Binding action (globalid) blueprint/shadow route for controller: module
 Binding action (sails) blueprint/shadow route for controller: module
 Binding action (download) blueprint/shadow route for controller: optlog
 Binding route ::   /optlog/download/:id? (POLICY: localaccess)
 Binding route ::   /optlog/download/:id? (POLICY: tokenAuth)
 Binding route ::   /optlog/download/:id? (POLICY: basicAuth)
 Binding route ::   /optlog/download/:id? (POLICY: passport)
 Binding route ::   /optlog/download/:id? (POLICY: sessionAuth)
 Binding route ::   /optlog/download/:id? (ACTION: optlog/download)
 Binding action (identity) blueprint/shadow route for controller: optlog
 Binding action (globalid) blueprint/shadow route for controller: optlog
 Binding action (sails) blueprint/shadow route for controller: optlog
 Binding RESTful blueprint/shadow routes for model+controller: optlog
 Binding route ::  get /optlog (POLICY: localaccess)
 Binding route ::  get /optlog (POLICY: tokenAuth)
 Binding route ::  get /optlog (POLICY: basicAuth)
 Binding route ::  get /optlog (POLICY: passport)
 Binding route ::  get /optlog (POLICY: sessionAuth)
 Binding route ::  get /optlog (BLUEPRINT: findRecords)
 Binding route ::  get /optlog/:id (POLICY: localaccess)
 Binding route ::  get /optlog/:id (POLICY: tokenAuth)
 Binding route ::  get /optlog/:id (POLICY: basicAuth)
 Binding route ::  get /optlog/:id (POLICY: passport)
 Binding route ::  get /optlog/:id (POLICY: sessionAuth)
 Binding route ::  get /optlog/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /optlog (POLICY: localaccess)
 Binding route ::  post /optlog (POLICY: tokenAuth)
 Binding route ::  post /optlog (POLICY: basicAuth)
 Binding route ::  post /optlog (POLICY: passport)
 Binding route ::  post /optlog (POLICY: sessionAuth)
 Binding route ::  post /optlog (BLUEPRINT: createRecord)
 Binding route ::  put /optlog/:id (POLICY: localaccess)
 Binding route ::  put /optlog/:id (POLICY: tokenAuth)
 Binding route ::  put /optlog/:id (POLICY: basicAuth)
 Binding route ::  put /optlog/:id (POLICY: passport)
 Binding route ::  put /optlog/:id (POLICY: sessionAuth)
 Binding route ::  put /optlog/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /optlog/:id (POLICY: localaccess)
 Binding route ::  post /optlog/:id (POLICY: tokenAuth)
 Binding route ::  post /optlog/:id (POLICY: basicAuth)
 Binding route ::  post /optlog/:id (POLICY: passport)
 Binding route ::  post /optlog/:id (POLICY: sessionAuth)
 Binding route ::  post /optlog/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /optlog/:id? (POLICY: localaccess)
 Binding route ::  delete /optlog/:id? (POLICY: tokenAuth)
 Binding route ::  delete /optlog/:id? (POLICY: basicAuth)
 Binding route ::  delete /optlog/:id? (POLICY: passport)
 Binding route ::  delete /optlog/:id? (POLICY: sessionAuth)
 Binding route ::  delete /optlog/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `assets` for optlog
 Binding route ::  post /optlog/:parentid/assets/:id? (POLICY: localaccess)
 Binding route ::  post /optlog/:parentid/assets/:id? (POLICY: tokenAuth)
 Binding route ::  post /optlog/:parentid/assets/:id? (POLICY: basicAuth)
 Binding route ::  post /optlog/:parentid/assets/:id? (POLICY: passport)
 Binding route ::  post /optlog/:parentid/assets/:id? (POLICY: sessionAuth)
 Binding route ::  post /optlog/:parentid/assets/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /optlog/:parentid/assets/:id? (POLICY: localaccess)
 Binding route ::  delete /optlog/:parentid/assets/:id? (POLICY: tokenAuth)
 Binding route ::  delete /optlog/:parentid/assets/:id? (POLICY: basicAuth)
 Binding route ::  delete /optlog/:parentid/assets/:id? (POLICY: passport)
 Binding route ::  delete /optlog/:parentid/assets/:id? (POLICY: sessionAuth)
 Binding route ::  delete /optlog/:parentid/assets/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `org` for optlog
 Binding route ::  get /optlog/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /optlog/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /optlog/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /optlog/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /optlog/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /optlog/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `assets` for optlog
 Binding route ::  get /optlog/:parentid/assets/:id? (POLICY: localaccess)
 Binding route ::  get /optlog/:parentid/assets/:id? (POLICY: tokenAuth)
 Binding route ::  get /optlog/:parentid/assets/:id? (POLICY: basicAuth)
 Binding route ::  get /optlog/:parentid/assets/:id? (POLICY: passport)
 Binding route ::  get /optlog/:parentid/assets/:id? (POLICY: sessionAuth)
 Binding route ::  get /optlog/:parentid/assets/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for optlog
 Binding route ::  get /optlog/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /optlog/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /optlog/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /optlog/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /optlog/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /optlog/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for optlog
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /optlog/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (validation) blueprint/shadow route for controller: org
 Binding route ::   /org/validation/:id? (POLICY: localaccess)
 Binding route ::   /org/validation/:id? (POLICY: tokenAuth)
 Binding route ::   /org/validation/:id? (POLICY: basicAuth)
 Binding route ::   /org/validation/:id? (POLICY: passport)
 Binding route ::   /org/validation/:id? (POLICY: sessionAuth)
 Binding route ::   /org/validation/:id? (ACTION: org/validation)
 Binding action (beforesubmitcheckorgname) blueprint/shadow route for controller: org
 Binding route ::   /org/beforesubmitcheckorgname/:id? (POLICY: localaccess)
 Binding route ::   /org/beforesubmitcheckorgname/:id? (POLICY: tokenAuth)
 Binding route ::   /org/beforesubmitcheckorgname/:id? (POLICY: basicAuth)
 Binding route ::   /org/beforesubmitcheckorgname/:id? (POLICY: passport)
 Binding route ::   /org/beforesubmitcheckorgname/:id? (POLICY: sessionAuth)
 Binding route ::   /org/beforesubmitcheckorgname/:id? (ACTION: org/beforesubmitcheckorgname)
 Binding action (identity) blueprint/shadow route for controller: org
 Binding action (globalid) blueprint/shadow route for controller: org
 Binding action (sails) blueprint/shadow route for controller: org
 Binding RESTful blueprint/shadow routes for model+controller: org
 Binding route ::  get /org (POLICY: localaccess)
 Binding route ::  get /org (POLICY: tokenAuth)
 Binding route ::  get /org (POLICY: basicAuth)
 Binding route ::  get /org (POLICY: passport)
 Binding route ::  get /org (POLICY: sessionAuth)
 Binding route ::  get /org (BLUEPRINT: findRecords)
 Binding route ::  get /org/:id (POLICY: localaccess)
 Binding route ::  get /org/:id (POLICY: tokenAuth)
 Binding route ::  get /org/:id (POLICY: basicAuth)
 Binding route ::  get /org/:id (POLICY: passport)
 Binding route ::  get /org/:id (POLICY: sessionAuth)
 Binding route ::  get /org/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /org (POLICY: localaccess)
 Binding route ::  post /org (POLICY: tokenAuth)
 Binding route ::  post /org (POLICY: basicAuth)
 Binding route ::  post /org (POLICY: passport)
 Binding route ::  post /org (POLICY: sessionAuth)
 Binding route ::  post /org (BLUEPRINT: createRecord)
 Binding route ::  put /org/:id (POLICY: localaccess)
 Binding route ::  put /org/:id (POLICY: tokenAuth)
 Binding route ::  put /org/:id (POLICY: basicAuth)
 Binding route ::  put /org/:id (POLICY: passport)
 Binding route ::  put /org/:id (POLICY: sessionAuth)
 Binding route ::  put /org/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /org/:id (POLICY: localaccess)
 Binding route ::  post /org/:id (POLICY: tokenAuth)
 Binding route ::  post /org/:id (POLICY: basicAuth)
 Binding route ::  post /org/:id (POLICY: passport)
 Binding route ::  post /org/:id (POLICY: sessionAuth)
 Binding route ::  post /org/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /org/:id? (POLICY: localaccess)
 Binding route ::  delete /org/:id? (POLICY: tokenAuth)
 Binding route ::  delete /org/:id? (POLICY: basicAuth)
 Binding route ::  delete /org/:id? (POLICY: passport)
 Binding route ::  delete /org/:id? (POLICY: sessionAuth)
 Binding route ::  delete /org/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `cabinets` for org
 Binding route ::  post /org/:parentid/cabinets/:id? (POLICY: localaccess)
 Binding route ::  post /org/:parentid/cabinets/:id? (POLICY: tokenAuth)
 Binding route ::  post /org/:parentid/cabinets/:id? (POLICY: basicAuth)
 Binding route ::  post /org/:parentid/cabinets/:id? (POLICY: passport)
 Binding route ::  post /org/:parentid/cabinets/:id? (POLICY: sessionAuth)
 Binding route ::  post /org/:parentid/cabinets/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /org/:parentid/cabinets/:id? (POLICY: localaccess)
 Binding route ::  delete /org/:parentid/cabinets/:id? (POLICY: tokenAuth)
 Binding route ::  delete /org/:parentid/cabinets/:id? (POLICY: basicAuth)
 Binding route ::  delete /org/:parentid/cabinets/:id? (POLICY: passport)
 Binding route ::  delete /org/:parentid/cabinets/:id? (POLICY: sessionAuth)
 Binding route ::  delete /org/:parentid/cabinets/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `subordinations` for org
 Binding route ::  post /org/:parentid/subordinations/:id? (POLICY: localaccess)
 Binding route ::  post /org/:parentid/subordinations/:id? (POLICY: tokenAuth)
 Binding route ::  post /org/:parentid/subordinations/:id? (POLICY: basicAuth)
 Binding route ::  post /org/:parentid/subordinations/:id? (POLICY: passport)
 Binding route ::  post /org/:parentid/subordinations/:id? (POLICY: sessionAuth)
 Binding route ::  post /org/:parentid/subordinations/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /org/:parentid/subordinations/:id? (POLICY: localaccess)
 Binding route ::  delete /org/:parentid/subordinations/:id? (POLICY: tokenAuth)
 Binding route ::  delete /org/:parentid/subordinations/:id? (POLICY: basicAuth)
 Binding route ::  delete /org/:parentid/subordinations/:id? (POLICY: passport)
 Binding route ::  delete /org/:parentid/subordinations/:id? (POLICY: sessionAuth)
 Binding route ::  delete /org/:parentid/subordinations/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `users` for org
 Binding route ::  post /org/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  post /org/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  post /org/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  post /org/:parentid/users/:id? (POLICY: passport)
 Binding route ::  post /org/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  post /org/:parentid/users/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /org/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  delete /org/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  delete /org/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  delete /org/:parentid/users/:id? (POLICY: passport)
 Binding route ::  delete /org/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  delete /org/:parentid/users/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `superior` for org
 Binding route ::  get /org/:parentid/superior/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/superior/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/superior/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/superior/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/superior/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/superior/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `cabinets` for org
 Binding route ::  get /org/:parentid/cabinets/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/cabinets/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/cabinets/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/cabinets/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/cabinets/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/cabinets/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `subordinations` for org
 Binding route ::  get /org/:parentid/subordinations/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/subordinations/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/subordinations/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/subordinations/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/subordinations/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/subordinations/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `users` for org
 Binding route ::  get /org/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/users/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/users/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for org
 Binding route ::  get /org/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for org
 Binding route ::  get /org/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /org/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /org/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /org/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /org/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /org/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (beforesubmitcheckpositionname) blueprint/shadow route for controller: position
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (POLICY: localaccess)
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (POLICY: tokenAuth)
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (POLICY: basicAuth)
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (POLICY: passport)
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (POLICY: sessionAuth)
 Binding route ::   /position/beforesubmitcheckpositionname/:id? (ACTION: position/beforesubmitcheckpositionname)
 Binding action (identity) blueprint/shadow route for controller: position
 Binding action (globalid) blueprint/shadow route for controller: position
 Binding action (sails) blueprint/shadow route for controller: position
 Binding RESTful blueprint/shadow routes for model+controller: position
 Binding route ::  get /position (POLICY: localaccess)
 Binding route ::  get /position (POLICY: tokenAuth)
 Binding route ::  get /position (POLICY: basicAuth)
 Binding route ::  get /position (POLICY: passport)
 Binding route ::  get /position (POLICY: sessionAuth)
 Binding route ::  get /position (BLUEPRINT: findRecords)
 Binding route ::  get /position/:id (POLICY: localaccess)
 Binding route ::  get /position/:id (POLICY: tokenAuth)
 Binding route ::  get /position/:id (POLICY: basicAuth)
 Binding route ::  get /position/:id (POLICY: passport)
 Binding route ::  get /position/:id (POLICY: sessionAuth)
 Binding route ::  get /position/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /position (POLICY: localaccess)
 Binding route ::  post /position (POLICY: tokenAuth)
 Binding route ::  post /position (POLICY: basicAuth)
 Binding route ::  post /position (POLICY: passport)
 Binding route ::  post /position (POLICY: sessionAuth)
 Binding route ::  post /position (BLUEPRINT: createRecord)
 Binding route ::  put /position/:id (POLICY: localaccess)
 Binding route ::  put /position/:id (POLICY: tokenAuth)
 Binding route ::  put /position/:id (POLICY: basicAuth)
 Binding route ::  put /position/:id (POLICY: passport)
 Binding route ::  put /position/:id (POLICY: sessionAuth)
 Binding route ::  put /position/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /position/:id (POLICY: localaccess)
 Binding route ::  post /position/:id (POLICY: tokenAuth)
 Binding route ::  post /position/:id (POLICY: basicAuth)
 Binding route ::  post /position/:id (POLICY: passport)
 Binding route ::  post /position/:id (POLICY: sessionAuth)
 Binding route ::  post /position/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /position/:id? (POLICY: localaccess)
 Binding route ::  delete /position/:id? (POLICY: tokenAuth)
 Binding route ::  delete /position/:id? (POLICY: basicAuth)
 Binding route ::  delete /position/:id? (POLICY: passport)
 Binding route ::  delete /position/:id? (POLICY: sessionAuth)
 Binding route ::  delete /position/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `subordinates` for position
 Binding route ::  post /position/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  post /position/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  post /position/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  post /position/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  post /position/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  post /position/:parentid/subordinates/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /position/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  delete /position/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  delete /position/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  delete /position/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  delete /position/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  delete /position/:parentid/subordinates/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `users` for position
 Binding route ::  post /position/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  post /position/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  post /position/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  post /position/:parentid/users/:id? (POLICY: passport)
 Binding route ::  post /position/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  post /position/:parentid/users/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /position/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  delete /position/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  delete /position/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  delete /position/:parentid/users/:id? (POLICY: passport)
 Binding route ::  delete /position/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  delete /position/:parentid/users/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `superior` for position
 Binding route ::  get /position/:parentid/superior/:id? (POLICY: localaccess)
 Binding route ::  get /position/:parentid/superior/:id? (POLICY: tokenAuth)
 Binding route ::  get /position/:parentid/superior/:id? (POLICY: basicAuth)
 Binding route ::  get /position/:parentid/superior/:id? (POLICY: passport)
 Binding route ::  get /position/:parentid/superior/:id? (POLICY: sessionAuth)
 Binding route ::  get /position/:parentid/superior/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `subordinates` for position
 Binding route ::  get /position/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  get /position/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  get /position/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  get /position/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  get /position/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  get /position/:parentid/subordinates/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `users` for position
 Binding route ::  get /position/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  get /position/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  get /position/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  get /position/:parentid/users/:id? (POLICY: passport)
 Binding route ::  get /position/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  get /position/:parentid/users/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for position
 Binding route ::  get /position/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /position/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /position/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /position/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /position/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /position/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for position
 Binding route ::  get /position/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /position/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /position/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /position/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /position/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /position/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (beforesubmitcheckrolename) blueprint/shadow route for controller: role
 Binding route ::   /role/beforesubmitcheckrolename/:id? (POLICY: localaccess)
 Binding route ::   /role/beforesubmitcheckrolename/:id? (POLICY: tokenAuth)
 Binding route ::   /role/beforesubmitcheckrolename/:id? (POLICY: basicAuth)
 Binding route ::   /role/beforesubmitcheckrolename/:id? (POLICY: passport)
 Binding route ::   /role/beforesubmitcheckrolename/:id? (POLICY: sessionAuth)
 Binding route ::   /role/beforesubmitcheckrolename/:id? (ACTION: role/beforesubmitcheckrolename)
 Binding action (identity) blueprint/shadow route for controller: role
 Binding action (globalid) blueprint/shadow route for controller: role
 Binding action (sails) blueprint/shadow route for controller: role
 Binding RESTful blueprint/shadow routes for model+controller: role
 Binding route ::  get /role (POLICY: localaccess)
 Binding route ::  get /role (POLICY: tokenAuth)
 Binding route ::  get /role (POLICY: basicAuth)
 Binding route ::  get /role (POLICY: passport)
 Binding route ::  get /role (POLICY: sessionAuth)
 Binding route ::  get /role (BLUEPRINT: findRecords)
 Binding route ::  get /role/:id (POLICY: localaccess)
 Binding route ::  get /role/:id (POLICY: tokenAuth)
 Binding route ::  get /role/:id (POLICY: basicAuth)
 Binding route ::  get /role/:id (POLICY: passport)
 Binding route ::  get /role/:id (POLICY: sessionAuth)
 Binding route ::  get /role/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /role (POLICY: localaccess)
 Binding route ::  post /role (POLICY: tokenAuth)
 Binding route ::  post /role (POLICY: basicAuth)
 Binding route ::  post /role (POLICY: passport)
 Binding route ::  post /role (POLICY: sessionAuth)
 Binding route ::  post /role (BLUEPRINT: createRecord)
 Binding route ::  put /role/:id (POLICY: localaccess)
 Binding route ::  put /role/:id (POLICY: tokenAuth)
 Binding route ::  put /role/:id (POLICY: basicAuth)
 Binding route ::  put /role/:id (POLICY: passport)
 Binding route ::  put /role/:id (POLICY: sessionAuth)
 Binding route ::  put /role/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /role/:id (POLICY: localaccess)
 Binding route ::  post /role/:id (POLICY: tokenAuth)
 Binding route ::  post /role/:id (POLICY: basicAuth)
 Binding route ::  post /role/:id (POLICY: passport)
 Binding route ::  post /role/:id (POLICY: sessionAuth)
 Binding route ::  post /role/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /role/:id? (POLICY: localaccess)
 Binding route ::  delete /role/:id? (POLICY: tokenAuth)
 Binding route ::  delete /role/:id? (POLICY: basicAuth)
 Binding route ::  delete /role/:id? (POLICY: passport)
 Binding route ::  delete /role/:id? (POLICY: sessionAuth)
 Binding route ::  delete /role/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `users` for role
 Binding route ::  post /role/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  post /role/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  post /role/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  post /role/:parentid/users/:id? (POLICY: passport)
 Binding route ::  post /role/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  post /role/:parentid/users/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /role/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  delete /role/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  delete /role/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  delete /role/:parentid/users/:id? (POLICY: passport)
 Binding route ::  delete /role/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  delete /role/:parentid/users/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `users` for role
 Binding route ::  get /role/:parentid/users/:id? (POLICY: localaccess)
 Binding route ::  get /role/:parentid/users/:id? (POLICY: tokenAuth)
 Binding route ::  get /role/:parentid/users/:id? (POLICY: basicAuth)
 Binding route ::  get /role/:parentid/users/:id? (POLICY: passport)
 Binding route ::  get /role/:parentid/users/:id? (POLICY: sessionAuth)
 Binding route ::  get /role/:parentid/users/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for role
 Binding route ::  get /role/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /role/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /role/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /role/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /role/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /role/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for role
 Binding route ::  get /role/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /role/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /role/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /role/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /role/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /role/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (envinfo) blueprint/shadow route for controller: system
 Binding route ::   /system/envinfo/:id? (POLICY: alwaysAllow)
 Binding route ::   /system/envinfo/:id? (ACTION: system/envinfo)
 Binding action (resetalarm) blueprint/shadow route for controller: system
 Binding route ::   /system/resetalarm/:id? (POLICY: alwaysAllow)
 Binding route ::   /system/resetalarm/:id? (ACTION: system/resetalarm)
 Binding action (settings) blueprint/shadow route for controller: system
 Binding route ::   /system/settings/:id? (POLICY: localaccess)
 Binding route ::   /system/settings/:id? (POLICY: tokenAuth)
 Binding route ::   /system/settings/:id? (POLICY: basicAuth)
 Binding route ::   /system/settings/:id? (POLICY: passport)
 Binding route ::   /system/settings/:id? (POLICY: sessionAuth)
 Binding route ::   /system/settings/:id? (ACTION: system/settings)
 Binding action (updatesettings) blueprint/shadow route for controller: system
 Binding route ::   /system/updatesettings/:id? (POLICY: localaccess)
 Binding route ::   /system/updatesettings/:id? (POLICY: tokenAuth)
 Binding route ::   /system/updatesettings/:id? (POLICY: basicAuth)
 Binding route ::   /system/updatesettings/:id? (POLICY: passport)
 Binding route ::   /system/updatesettings/:id? (POLICY: sessionAuth)
 Binding route ::   /system/updatesettings/:id? (ACTION: system/updatesettings)
 Binding action (resetdefault) blueprint/shadow route for controller: system
 Binding route ::   /system/resetdefault/:id? (POLICY: localaccess)
 Binding route ::   /system/resetdefault/:id? (POLICY: tokenAuth)
 Binding route ::   /system/resetdefault/:id? (POLICY: basicAuth)
 Binding route ::   /system/resetdefault/:id? (POLICY: passport)
 Binding route ::   /system/resetdefault/:id? (POLICY: sessionAuth)
 Binding route ::   /system/resetdefault/:id? (ACTION: system/resetdefault)
 Binding action (identity) blueprint/shadow route for controller: system
 Binding action (globalid) blueprint/shadow route for controller: system
 Binding action (sails) blueprint/shadow route for controller: system
 Binding RESTful blueprint/shadow routes for model+controller: system
 Binding route ::  get /system (POLICY: localaccess)
 Binding route ::  get /system (POLICY: tokenAuth)
 Binding route ::  get /system (POLICY: basicAuth)
 Binding route ::  get /system (POLICY: passport)
 Binding route ::  get /system (POLICY: sessionAuth)
 Binding route ::  get /system (BLUEPRINT: findRecords)
 Binding route ::  get /system/:id (POLICY: localaccess)
 Binding route ::  get /system/:id (POLICY: tokenAuth)
 Binding route ::  get /system/:id (POLICY: basicAuth)
 Binding route ::  get /system/:id (POLICY: passport)
 Binding route ::  get /system/:id (POLICY: sessionAuth)
 Binding route ::  get /system/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /system (POLICY: localaccess)
 Binding route ::  post /system (POLICY: tokenAuth)
 Binding route ::  post /system (POLICY: basicAuth)
 Binding route ::  post /system (POLICY: passport)
 Binding route ::  post /system (POLICY: sessionAuth)
 Binding route ::  post /system (BLUEPRINT: createRecord)
 Binding route ::  put /system/:id (POLICY: localaccess)
 Binding route ::  put /system/:id (POLICY: tokenAuth)
 Binding route ::  put /system/:id (POLICY: basicAuth)
 Binding route ::  put /system/:id (POLICY: passport)
 Binding route ::  put /system/:id (POLICY: sessionAuth)
 Binding route ::  put /system/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /system/:id (POLICY: localaccess)
 Binding route ::  post /system/:id (POLICY: tokenAuth)
 Binding route ::  post /system/:id (POLICY: basicAuth)
 Binding route ::  post /system/:id (POLICY: passport)
 Binding route ::  post /system/:id (POLICY: sessionAuth)
 Binding route ::  post /system/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /system/:id? (POLICY: localaccess)
 Binding route ::  delete /system/:id? (POLICY: tokenAuth)
 Binding route ::  delete /system/:id? (POLICY: basicAuth)
 Binding route ::  delete /system/:id? (POLICY: passport)
 Binding route ::  delete /system/:id? (POLICY: sessionAuth)
 Binding route ::  delete /system/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `createdBy` for system
 Binding route ::  get /system/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /system/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /system/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /system/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /system/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /system/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for system
 Binding route ::  get /system/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /system/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /system/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /system/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /system/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /system/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (create) blueprint/shadow route for controller: user
 Binding route ::   /user/create/:id? (POLICY: localaccess)
 Binding route ::   /user/create/:id? (POLICY: tokenAuth)
 Binding route ::   /user/create/:id? (POLICY: basicAuth)
 Binding route ::   /user/create/:id? (POLICY: passport)
 Binding route ::   /user/create/:id? (POLICY: sessionAuth)
 Binding route ::   /user/create/:id? (ACTION: user/create)
 Binding action (me) blueprint/shadow route for controller: user
 Binding route ::   /user/me/:id? (POLICY: localaccess)
 Binding route ::   /user/me/:id? (POLICY: tokenAuth)
 Binding route ::   /user/me/:id? (POLICY: basicAuth)
 Binding route ::   /user/me/:id? (POLICY: passport)
 Binding route ::   /user/me/:id? (POLICY: sessionAuth)
 Binding route ::   /user/me/:id? (ACTION: user/me)
 Binding action (identity) blueprint/shadow route for controller: user
 Binding action (globalid) blueprint/shadow route for controller: user
 Binding action (sails) blueprint/shadow route for controller: user
 Binding RESTful blueprint/shadow routes for model+controller: user
 Binding route ::  get /user (POLICY: localaccess)
 Binding route ::  get /user (POLICY: tokenAuth)
 Binding route ::  get /user (POLICY: basicAuth)
 Binding route ::  get /user (POLICY: passport)
 Binding route ::  get /user (POLICY: sessionAuth)
 Binding route ::  get /user (BLUEPRINT: findRecords)
 Binding route ::  get /user/:id (POLICY: localaccess)
 Binding route ::  get /user/:id (POLICY: tokenAuth)
 Binding route ::  get /user/:id (POLICY: basicAuth)
 Binding route ::  get /user/:id (POLICY: passport)
 Binding route ::  get /user/:id (POLICY: sessionAuth)
 Binding route ::  get /user/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /user (POLICY: localaccess)
 Binding route ::  post /user (POLICY: tokenAuth)
 Binding route ::  post /user (POLICY: basicAuth)
 Binding route ::  post /user (POLICY: passport)
 Binding route ::  post /user (POLICY: sessionAuth)
 Binding route ::  post /user (ACTION: user/create)
 Binding route ::  put /user/:id (POLICY: localaccess)
 Binding route ::  put /user/:id (POLICY: tokenAuth)
 Binding route ::  put /user/:id (POLICY: basicAuth)
 Binding route ::  put /user/:id (POLICY: passport)
 Binding route ::  put /user/:id (POLICY: sessionAuth)
 Binding route ::  put /user/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /user/:id (POLICY: localaccess)
 Binding route ::  post /user/:id (POLICY: tokenAuth)
 Binding route ::  post /user/:id (POLICY: basicAuth)
 Binding route ::  post /user/:id (POLICY: passport)
 Binding route ::  post /user/:id (POLICY: sessionAuth)
 Binding route ::  post /user/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /user/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:id? (POLICY: passport)
 Binding route ::  delete /user/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `subordinates` for user
 Binding route ::  post /user/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/subordinates/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/subordinates/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `fingerprints` for user
 Binding route ::  post /user/:parentid/fingerprints/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/fingerprints/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/fingerprints/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/fingerprints/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/fingerprints/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/fingerprints/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/fingerprints/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `roles` for user
 Binding route ::  post /user/:parentid/roles/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/roles/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/roles/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/roles/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/roles/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/roles/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/roles/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/roles/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/roles/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/roles/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/roles/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/roles/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `passports` for user
 Binding route ::  post /user/:parentid/passports/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/passports/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/passports/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/passports/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/passports/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/passports/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/passports/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/passports/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/passports/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/passports/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/passports/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/passports/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `guns` for user
 Binding route ::  post /user/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/guns/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/guns/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `userLogs` for user
 Binding route ::  post /user/:parentid/userLogs/:id? (POLICY: localaccess)
 Binding route ::  post /user/:parentid/userLogs/:id? (POLICY: tokenAuth)
 Binding route ::  post /user/:parentid/userLogs/:id? (POLICY: basicAuth)
 Binding route ::  post /user/:parentid/userLogs/:id? (POLICY: passport)
 Binding route ::  post /user/:parentid/userLogs/:id? (POLICY: sessionAuth)
 Binding route ::  post /user/:parentid/userLogs/:id? (BLUEPRINT: addToCollection)
 Binding route ::  delete /user/:parentid/userLogs/:id? (POLICY: localaccess)
 Binding route ::  delete /user/:parentid/userLogs/:id? (POLICY: tokenAuth)
 Binding route ::  delete /user/:parentid/userLogs/:id? (POLICY: basicAuth)
 Binding route ::  delete /user/:parentid/userLogs/:id? (POLICY: passport)
 Binding route ::  delete /user/:parentid/userLogs/:id? (POLICY: sessionAuth)
 Binding route ::  delete /user/:parentid/userLogs/:id? (BLUEPRINT: remove)
 Binding RESTful association blueprint `superior` for user
 Binding route ::  get /user/:parentid/superior/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/superior/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/superior/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/superior/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/superior/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/superior/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `subordinates` for user
 Binding route ::  get /user/:parentid/subordinates/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/subordinates/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/subordinates/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/subordinates/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/subordinates/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/subordinates/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `device` for user
 Binding route ::  get /user/:parentid/device/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/device/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/device/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/device/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/device/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/device/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `fingerprints` for user
 Binding route ::  get /user/:parentid/fingerprints/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/fingerprints/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/fingerprints/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/fingerprints/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/fingerprints/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/fingerprints/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `roles` for user
 Binding route ::  get /user/:parentid/roles/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/roles/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/roles/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/roles/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/roles/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/roles/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `position` for user
 Binding route ::  get /user/:parentid/position/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/position/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/position/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/position/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/position/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/position/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `passports` for user
 Binding route ::  get /user/:parentid/passports/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/passports/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/passports/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/passports/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/passports/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/passports/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `guns` for user
 Binding route ::  get /user/:parentid/guns/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/guns/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/guns/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/guns/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/guns/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/guns/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `userLogs` for user
 Binding route ::  get /user/:parentid/userLogs/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/userLogs/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/userLogs/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/userLogs/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/userLogs/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/userLogs/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `org` for user
 Binding route ::  get /user/:parentid/org/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/org/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/org/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/org/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/org/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/org/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for user
 Binding route ::  get /user/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for user
 Binding route ::  get /user/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /user/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /user/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /user/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /user/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /user/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding action (identity) blueprint/shadow route for controller: userlog
 Binding action (globalid) blueprint/shadow route for controller: userlog
 Binding action (sails) blueprint/shadow route for controller: userlog
 Binding RESTful blueprint/shadow routes for model+controller: userlog
 Binding route ::  get /userlog (POLICY: localaccess)
 Binding route ::  get /userlog (POLICY: tokenAuth)
 Binding route ::  get /userlog (POLICY: basicAuth)
 Binding route ::  get /userlog (POLICY: passport)
 Binding route ::  get /userlog (POLICY: sessionAuth)
 Binding route ::  get /userlog (BLUEPRINT: findRecords)
 Binding route ::  get /userlog/:id (POLICY: localaccess)
 Binding route ::  get /userlog/:id (POLICY: tokenAuth)
 Binding route ::  get /userlog/:id (POLICY: basicAuth)
 Binding route ::  get /userlog/:id (POLICY: passport)
 Binding route ::  get /userlog/:id (POLICY: sessionAuth)
 Binding route ::  get /userlog/:id (BLUEPRINT: findOneRecord)
 Binding route ::  post /userlog (POLICY: localaccess)
 Binding route ::  post /userlog (POLICY: tokenAuth)
 Binding route ::  post /userlog (POLICY: basicAuth)
 Binding route ::  post /userlog (POLICY: passport)
 Binding route ::  post /userlog (POLICY: sessionAuth)
 Binding route ::  post /userlog (BLUEPRINT: createRecord)
 Binding route ::  put /userlog/:id (POLICY: localaccess)
 Binding route ::  put /userlog/:id (POLICY: tokenAuth)
 Binding route ::  put /userlog/:id (POLICY: basicAuth)
 Binding route ::  put /userlog/:id (POLICY: passport)
 Binding route ::  put /userlog/:id (POLICY: sessionAuth)
 Binding route ::  put /userlog/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  post /userlog/:id (POLICY: localaccess)
 Binding route ::  post /userlog/:id (POLICY: tokenAuth)
 Binding route ::  post /userlog/:id (POLICY: basicAuth)
 Binding route ::  post /userlog/:id (POLICY: passport)
 Binding route ::  post /userlog/:id (POLICY: sessionAuth)
 Binding route ::  post /userlog/:id (BLUEPRINT: updateOneRecord)
 Binding route ::  delete /userlog/:id? (POLICY: localaccess)
 Binding route ::  delete /userlog/:id? (POLICY: tokenAuth)
 Binding route ::  delete /userlog/:id? (POLICY: basicAuth)
 Binding route ::  delete /userlog/:id? (POLICY: passport)
 Binding route ::  delete /userlog/:id? (POLICY: sessionAuth)
 Binding route ::  delete /userlog/:id? (BLUEPRINT: destroyOneRecord)
 Binding RESTful association blueprint `user` for userlog
 Binding route ::  get /userlog/:parentid/user/:id? (POLICY: localaccess)
 Binding route ::  get /userlog/:parentid/user/:id? (POLICY: tokenAuth)
 Binding route ::  get /userlog/:parentid/user/:id? (POLICY: basicAuth)
 Binding route ::  get /userlog/:parentid/user/:id? (POLICY: passport)
 Binding route ::  get /userlog/:parentid/user/:id? (POLICY: sessionAuth)
 Binding route ::  get /userlog/:parentid/user/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `createdBy` for userlog
 Binding route ::  get /userlog/:parentid/createdBy/:id? (POLICY: localaccess)
 Binding route ::  get /userlog/:parentid/createdBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /userlog/:parentid/createdBy/:id? (POLICY: basicAuth)
 Binding route ::  get /userlog/:parentid/createdBy/:id? (POLICY: passport)
 Binding route ::  get /userlog/:parentid/createdBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /userlog/:parentid/createdBy/:id? (BLUEPRINT: expand)
 Binding RESTful association blueprint `updatedBy` for userlog
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (POLICY: localaccess)
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (POLICY: tokenAuth)
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (POLICY: basicAuth)
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (POLICY: passport)
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (POLICY: sessionAuth)
 Binding route ::  get /userlog/:parentid/updatedBy/:id? (BLUEPRINT: expand)
 Binding route ::  get /csrfToken (FUNCTION: csrfToken)